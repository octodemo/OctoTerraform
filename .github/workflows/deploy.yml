name: Deploy with approval

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  get_workflow_token:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.get_token.outputs.token }}
    steps: 
    - name: Get Token
      id: get_token
      uses: peter-murray/workflow-application-token-action@v1
      with:
        application_id: ${{ secrets.APPLICATION_ID }}
        application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
  terraform-plan:
    runs-on: ubuntu-latest
    needs: get_workflow_token
    steps:
    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: https://foo:{{needs.get_workflow_token.outputs.token}}@github.com
    - name: Checkout
      uses: actions/checkout@v2
    - name: Caching
      uses: actions/cache@v3.2.4
      with:
        path: |
          .terraform
          terraform.tfstate
        key: ${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl', 'main.tf') }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: true #Explicitely enabling the wrapper for clarity, meanwhile it defaults to true
    - name: Terraform Init
      run: terraform init
    - name: Terraform Format
      run: terraform fmt
    - name: Terraform Validate
      run: terraform validate
    - name: Terraform Plan
      id: plan
      run: |
        mkdir ~/terraform-output
        terraform plan -no-color -out ~/terraform-output/plan -var-file="production.tfvars"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}} 
    - name: Log plan as plain text
      run: | 
        echo "${{ steps.plan.outputs.stdout }}" > ~/terraform-output/plan.txt
    - name: Upload plan
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan
        path: ~/terraform-output/
          
  terraform-apply:
    runs-on: ubuntu-latest
    environment: 
      production
    needs: 
      - get_workflow_token 
      - terraform-plan
    steps:
    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: https://foo:{{needs.get_workflow_token.outputs.token}}@github.com
    - name: Checkout
      uses: actions/checkout@v2
    - name: Caching
      uses: actions/cache@v3.2.4
      with:
        path: |
          .terraform
          terraform.tfstate
        key: ${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl', 'main.tf') }}
    - name: Restore plan
      uses: actions/download-artifact@v2
      with:
        name: terraform-plan
        path: ~/terraform-output/
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: true #Explicitely enabling the wrapper for clarity, meanwhile it defaults to true
    - name: Terraform Init
      run: terraform init
    - name: Apply
      run: terraform apply -auto-approve ~/terraform-output/plan 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}} 
